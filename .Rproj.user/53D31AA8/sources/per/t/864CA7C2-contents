---
title: "Dataprojekt"
author: "Christian Voldby"
date: "2/21/2022"
output: 
  pdf_document:
    latex_engine: xelatex
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r, include= FALSE}
# Potential packages
#library(tidyverse)
#library(dplyr)
#library(TailRank)
```

```{r}
#Loading the data
#pinpoint_2015 <- read.csv("Data/Pinpoint - Alle arter 2015.csv")

pinpoint_2007 <- read.csv("Data/Pinpoint - Alle arter 2007.csv")

abiotiske <- read.csv("Data/alledata-abiotiske.csv")

cover <- read.csv("Data/alledata-cover.csv")

#frekvens <- read.csv("Data/alledata-frekvens.csv")

#frekvens_samlet <- read.csv("Data/alledata-frekvens-samletaxa-csv.csv")

#cover_samlet <- read.csv("Data/alledata-cover-samletaxa-csv.csv")

```


## Readying data for Calluna Vulgaris & Deschampsia Flexuosa

```{r}
# Readying the data for Calluna Vulgaris(Hedelyng) and Deschampsia Flexuosa(Bølget Bunke)

# The cover data

bunke_hedelyng <- pinpoint_2007[pinpoint_2007$NavnDansk == "bølget bunke" | 
                                pinpoint_2007$NavnDansk == "hedelyng",]

bunke_hedelyng_cover <- cover[cover$X974 > 0, ]

bunke_hedelyng_cover <- bunke_hedelyng_cover[, !apply(bunke_hedelyng_cover == 0, 2, all)]

bunke_hedelyng_cover <- bunke_hedelyng_cover[bunke_hedelyng_cover$X2020 > 0 & bunke_hedelyng_cover$X974 > 0, ]

bunke_hedelyng_cover <- bunke_hedelyng_cover[c("site", "plot", "year", "X974", "X2020")]

# Data manipulation: Selecting all the sites with 30 or more plots.
test_list <- c()
L <- unique(bunke_hedelyng_cover[c("site")])

for (i in 1:length(table(bunke_hedelyng_cover$site))) {
  if (table(bunke_hedelyng_cover$site)[i] > 30) {
    test_list <- c(test_list, L[i,])
  }
}

bunke_hedelyng_cover <- subset(bunke_hedelyng_cover, site %in% test_list)

bunke_hedelyng_cover <- bunke_hedelyng_cover[bunke_hedelyng_cover$year == 2007,]

# The related plot pinpoint data
bunke_hedelyng <- subset(bunke_hedelyng, stationNr %in% test_list & StedID %in% bunke_hedelyng_cover$plot)



# The abiotic data
#dry_heathland_lyng_bunke <- abiotiske[abiotiske$terhabtype == "{4030}",]



```

## Distribution & Covariance
The next section of code focuses on creating the necessary functions for calculating the covariance.
This is done using the pin-point data. 
At each plot has the variables:
r measures the number of pins that only touch plant species A.
s measures the number of pins that only touch plant species B.
t measures the number of pins that touch both plant species A and B.
u measures the number of pins that touch neither plant species A or B.

### Correlation and covariance
The idea of testing the covariance

### Polya-Eggenberger distribution
An urn contains $a$ white balls and $b$ black balls. A ball is drawn at random and replaced with $c$ balls of the same color. There are three special cases when $c = \{-1, 0, 1\}$. This process is repeated $n$ times. The probability of success in a single trail is $\alpha$ and the correlation $\delta$ between two trails is $\theta/(1 + \theta)$.

```{r}
# Calculating the observed variance of a site

observed_covariance <- function(r, t, s, N){
  return(1/N * (1/N * sum((r + t) * (s + t)) - 1/N * sum(r + t) * 1/N * sum(s + t)))
}

expected_covariance <- function(r, t, s, N){
  return(t - N)
}

# Calculating the Polya-Eggenberger Distribution

poch <- function(x, n){
  return(gamma(x + n) / gamma(x))
}

# The PDF of the Polya-Eggenberger distribution is generalisation of the beta-binomial distribution
n <- 16



```

## The beta-binomial distribution: Bayesian Derivation

The plot data has 16 pins. $x$ is the number of successes in the 16 pin-point frame. Assuming each pin is independent from the other pins in the frame (this is obviously not the case) we have 16 independent Bernoulli trials with the assumed same probability parameter $v$. The probability is unknown but the sample-size $n$ is known. Thus, we have:
$$
x|\pi \sim \text{Binomial}(16, \pi)
$$
And the binomial distribution
$$
p(x | \pi) = \binom{n}{x} \pi^x (1-\pi)^{1-x}, \quad x = 0,1,\dots,n.
$$
The prior distribution for $\pi$ a beta distribution
$$
\pi \sim \text{beta}(\alpha, \beta)
$$
with density function
$$
p(\pi) = \frac{1}{\mathbf{B}(\alpha, \beta)}\pi^{\alpha - 1}(1-\alpha)^{\beta-1}, \quad 0 < \pi < 1
$$
The posterior distribution is a beta distribution as well
$$
\pi | x \sim \text{beta}(\alpha + x, \beta + n - x).
$$

```{r}
dlt <- 0.5
q <- 0.1
n <- 16

func_gamma <- function(alpha, beta){
  return((gamma(alpha) * gamma(beta)) / gamma(alpha + beta))
}

x <- seq(0.01, 0.99, length = 16)
v <- dbeta(x, 0.9, 8.1)

plot(x, func_beta(x, 0.9, 8.1), type = "l")
plot(x, v, type = "l")
```


## Spatial Aggregation
This section tries to recreate the plots for spatial aggregation from the article.

### Relatively small spatial aggregation.

```{r}
dlt <- 0.1
n <- 16
q <- 0.1

pa <- beta(q/dlt - q, (1 - q)*(1 - dlt)/dlt)

pb <- beta(q/dlt - q, (1 - q)*(1 - dlt)/dlt)

my_list <- vector()

for (i in 0:16) {
    my_list[i + 1] <- dmultinom(x = c(i, 0, 16 - i), prob = c(pa, pb, 1- pa - pb)) 
}

x <- seq(0, 16)

plot(x, my_list, type = "l")


```


### Beta-binomial Distribution
```{r}
dlt <- 0.1
q <- 0.1
n <- 16

x <- seq(0, 1, length = 100)

v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)

plot(x, v, type = "l", ylab = "Density", main = "Beta Distribution")

# These plot do not really make sense to me.

beta(0.9, 8.1)


```


```{r}
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
  pa <- seq(beta(q/d - q, (1 - q)*(1 - d)/d), by = 0, length = 17)
  pb <- seq(beta(q/d - q, (1 - q)*(1 - d)/d), by = 0, length = 17)
  if (r + s <= 16) {
    return(dmultinom(x = c(r, s, n - r - s), prob = c(pa, pb, 1 - pa - pb)))
  }
  else{
    return(0)
  }
  
}

ttst <- function(x, y){
  if (r + s <= 16) {
   dmultinom(x = c(x, y, 16 - x - y), prob = c(0.164, 0.164, 0.673))
  }
  else{
    0
  }
}

r <- s <- seq(0, 16)

z <- outer(r, s, ttst)

persp(r, s, z, theta = 30, phi = 15)

```

