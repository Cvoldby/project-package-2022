knitr::opts_chunk$set(echo = TRUE)
dlt <- 0.1
q <- 0.1
c(q/dlt - q, (1 - q)*(1 - dlt)/dlt)
dlt <- 0.5
c(q/dlt - q, (1 - q)*(1 - dlt)/dlt)
x <- seq(0, 1, by = 0.1)
v <- dbeta(x, 0.1, 0.9)
x <- seq(0, 1, length = 16)
v <- dbeta(x, 0.1, 0.9)
x <- seq(0.01, 0.99, length = 16)
v <- dbeta(x, 0.1, 0.9)
f <- dbinom(x = x, size = n, prob = v)
dlt = 0.1
dlt = 0.2
n = 16
n <- 16
x <- seq(0.01, 0.99, length = 16)
v <- dbeta(x, 0.1, 0.9)
f <- dbinom(x = x, size = n, prob = v)
plot(x, v, type = "l")
dlt <- 0.2
q <- 0.1
n <- 16
func_gamma <- function(alpha, beta){
return((gamma(alpha) * gamma(beta)) / gamma(alpha + beta))
}
x <- seq(0.01, 0.99, length = 16)
v <- dbeta(x, 0.1, 0.9)
plot(x, v, type = "l")
dlt <- 0.2
q <- 0.1
n <- 16
func_gamma <- function(alpha, beta){
return((gamma(alpha) * gamma(beta)) / gamma(alpha + beta))
}
x <- seq(0.01, 0.99, length = 16)
v <- dbeta(x, 0.1, 0.9)
plot(x, v, type = "l")
dlt <- 0.5
q <- 0.1
n <- 16
func_gamma <- function(alpha, beta){
return((gamma(alpha) * gamma(beta)) / gamma(alpha + beta))
}
x <- seq(0.01, 0.99, length = 16)
v <- dbeta(x, 0.1, 0.9)
plot(x, v, type = "l")
v <- dbeta(x, 0.9, 8.1)
plot(x, v, type = "l")
dlt <- 0.5
q <- 0.1
n <- 16
func_gamma <- function(alpha, beta){
return((gamma(alpha) * gamma(beta)) / gamma(alpha + beta))
}
func_beta <- function(pi, alpha, beta){
if (pi < 1 & pi > 0) {
return(1 / func_gamma(alpha, beta) * pi^(alpha - 1) * (1 - pi)^(beta - 1))
}
}
x <- seq(0.01, 0.99, length = 16)
v <- dbeta(x, 0.9, 8.1)
plot(x, func_beta(x, 0.9, 8.1), type = "l")
plot(x, v, type = "l")
dlt <- 0.5
q <- 0.1
n <- 16
func_gamma <- function(alpha, beta){
return((gamma(alpha) * gamma(beta)) / gamma(alpha + beta))
}
func_beta <- function(pi, alpha, beta){
if (pi < 1 & pi > 0) {
return(1 / func_gamma(alpha, beta) * pi^(alpha - 1) * (1 - pi)^(beta - 1))
}
else{
return("p must be 0 < p < 1")
}
}
x <- seq(0.01, 0.99, length = 16)
v <- dbeta(x, 0.9, 8.1)
plot(x, func_beta(x, 0.9, 8.1), type = "l")
plot(x, v, type = "l")
dlt <- 0.5
q <- 0.1
n <- 16
func_gamma <- function(alpha, beta){
return((gamma(alpha) * gamma(beta)) / gamma(alpha + beta))
}
func_beta <- function(pi, alpha, beta){
if (pi < 1) {
return(1 / func_gamma(alpha, beta) * pi^(alpha - 1) * (1 - pi)^(beta - 1))
}
else{
return("p must be 0 < p < 1")
}
}
x <- seq(0.01, 0.99, length = 16)
v <- dbeta(x, 0.9, 8.1)
plot(x, func_beta(x, 0.9, 8.1), type = "l")
plot(x, v, type = "l")
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
x <- seq(0.01, 0.99, length = 17)
v = pbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
#dmultinom(x = c(r, s, n - r - s), prob = c(v[r], v[s], 1 - v[r] - v[s]))
sqrt(r + s ^ 2)
}
r <- s <- seq(0, 16)
z <- outer(r, s, tst)
persp(r, s, z, theta = 30, phi = 15)
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
x <- seq(0.01, 0.99, length = 17)
v = pbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
#dmultinom(x = c(r, s, n - r - s), prob = c(v[r], v[s], 1 - v[r] - v[s]))
return(sqrt(r + s ^ 2))
}
r <- s <- seq(0, 16)
z <- outer(r, s, tst)
persp(r, s, z, theta = 30, phi = 15)
rm(list = ls())
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
x <- seq(0.01, 0.99, length = 16)
v = pbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
dmultinom(x = c(r, s, n - r - s), prob = c(v[r], v[s], 1 - v[r] - v[s]))
#return(sqrt(r + s ^ 2))
}
r <- s <- seq(0, 16)
z <- outer(r, s, tst)
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
x <- seq(0.01, 0.99, length = 16)
v = pbeta(x, q/d - q, (1 - q)*(1 - d)/d)
dmultinom(x = c(r, s, n - r - s), prob = c(v[r], v[s], 1 - v[r] - v[s]))
#return(sqrt(r + s ^ 2))
}
r <- s <- seq(0, 16)
z <- outer(r, s, tst)
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
x <- seq(0.01, 0.99, length = 17)
v = pbeta(x, q/d - q, (1 - q)*(1 - d)/d)
dmultinom(x = c(r, s, n - r - s), prob = c(v[r], v[s], 1 - v[r] - v[s]))
#return(sqrt(r + s ^ 2))
}
r <- s <- seq(0, 16)
z <- outer(r, s, tst)
c(r, s, n - r - s)
n <- 16
c(r, s, n - r - s)
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
x <- seq(0.01, 0.99, length = 17)
v <- dbeta(x, q/d - q, (1 - q)*(1 - d)/d)
dmultinom(x = c(r, s, 0), prob = c(v[r], v[s], 1 - v[r] - v[s]))
#return(sqrt(r + s ^ 2))
}
r <- s <- seq(0, 16)
z <- outer(r, s, tst)
c(r, s, 0)
c(r, s, n - r)
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
x <- seq(0.01, 0.99, length = 17)
v <- dbeta(x, q/d - q, (1 - q)*(1 - d)/d)
if (r + s <= 16) {
dmultinom(x = c(r, s, n - r - s), prob = c(v[r], v[s], 1 - v[r] - v[s]))
}
#return(sqrt(r + s ^ 2))
}
r <- s <- seq(0, 16)
z <- outer(r, s, tst)
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
x <- seq(0.01, 0.99, length = 17)
v <- dbeta(x, q/d - q, (1 - q)*(1 - d)/d)
if (r + s <= 16) {
return(dmultinom(x = c(r, s, n - r - s), prob = c(v[r], v[s], 1 - v[r] - v[s])))
}
else{
return(0)
}
}
r <- s <- seq(0, 16)
z <- outer(r, s, tst)
c(v[r], v[s], 1 - v[r] - v[s])
v <- dbeta(x, 0.9, 8.1)
x <- seq(0.01, 0.99, length = 17)
v <- dbeta(x, 0.9, 8.1)
v
v[5]
length(v)
length(r)
length(s)
getwd()
sdggerg
source("~/.active-rstudio-document", echo=TRUE)
---
sdggerg
binom(4,2)
choose(6,2)
knitr::opts_chunk$set(echo = TRUE)
dlt <- 0.1
q <- 0.1
n <- 16
x <- seq(0, 1, length = 17)
v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", ylab = "Beta Density")
# These plot do not really make sense to me.
x <- seq(0, 16)
tst <- dmultinom(x = c(x, 0, 16 - x), prob = c(v, 10, ))
tst <- dmultinom(x = c(x, 0, 16 - x), prob = c(v, 0, 1 - v))
dlt <- 0.1
q <- 0.1
n <- 16
x <- seq(0, 1, length = 17)
v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", ylab = "Beta Density")
# These plot do not really make sense to me.
x <- seq(0, 16)
tst <- dmultinom(x = c(x, 0, 16 - x), prob = c(v, 0, 1 - v))
dlt <- 0.1
q <- 0.1
n <- 16
x <- seq(0, 1, length = 17)
v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", ylab = "Beta Density")
# These plot do not really make sense to me.
x <- seq(0, 16)
tst <- dmultinom(x = c(x,16 - x), prob = c(v, 1 - v))
dlt <- 0.1
q <- 0.1
n <- 16
x <- seq(0.01, 0.99, length = 17)
v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", ylab = "Beta Density")
# These plot do not really make sense to me.
x <- seq(0, 16)
tst <- dmultinom(x = c(x,16 - x), prob = c(v, 1 - v))
dlt <- 0.1
q <- 0.1
n <- 16
x <- seq(0.01, 0.99, length = 17)
v <- pbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", ylab = "Beta Density")
# These plot do not really make sense to me.
x <- seq(0, 16)
tst <- dmultinom(x = c(x,16 - x), prob = c(v, 1 - v))
dlt <- 0.1
q <- 0.1
n <- 16
x <- seq(0.01, 0.99, length = 17)
v <- pbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", ylab = "Beta Density")
# These plot do not really make sense to me.
x <- seq(0, 16)
tst <- dmultinom(x = c(x,16 - x), prob = c(v, 1 - v))
return(x^2 + y^2)
ball <- function(x, y){
return(x^2 + y^2)
}
r <- s <- seq(0, 16)
z <- outer(r, s, ball)
persp(r, s, z, theta = 30, phi = 15)
ball <- function(x, y){
return(x^2 * y^2)
}
r <- s <- seq(0, 16)
z <- outer(r, s, ball)
persp(r, s, z, theta = 30, phi = 15)
ball <- function(x, y){
return(x^2 + y^2)
}
r <- s <- seq(-16, 16)
z <- outer(r, s, ball)
persp(r, s, z, theta = 30, phi = 15)
ball <- function(x, y){
return(x^2 * y^2)
}
r <- s <- seq(-16, 16)
z <- outer(r, s, ball)
persp(r, s, z, theta = 30, phi = 15)
dlt <- 0.1
q <- 0.1
n <- 16
x <- seq(0, 1, length = 100)
v <- pbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", ylab = "Beta Density")
dlt <- 0.5
q <- 0.1
n <- 16
x <- seq(0, 1, length = 100)
v <- pbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", ylab = "Beta Density")
dlt <- 0.5
q <- 0.1
n <- 16
x <- seq(0, 1, length = 100)
v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", ylab = "Beta Density")
dlt <- 0.1
q <- 0.1
n <- 16
x <- seq(0, 1, length = 100)
v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", ylab = "Beta Density")
plot(x, v, type = "l", ylab = "Density", main = "Beta Distribution")
dlt <- 0.1
n <- 16
q <- 0.1
x <- seq(0, 1, length = 100)
pa <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
pb <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, pa)
plot(x, pa, type = "l")
beta(0.9, 8.1)
beta(0.9, 8.1)
```{r}
dlt <- 0.1
n <- 16
q <- 0.1
x <- seq(0, 1, length = 100)
pa <- beta(q/dlt - q, (1 - q)*(1 - dlt)/dlt)
pb <- beta(q/dlt - q, (1 - q)*(1 - dlt)/dlt)
my_list <- vector()
for (i in 1:16) {
my_list[i] <- dmultinom(x = c(i, 0, 16 - i), prob = c(pa[i], 0, 1- pa[i]))
}
for (i in 1:16) {
my_list[i] <- dmultinom(x = c(i, 0, 16 - i), prob = c(pa, pb, 1- pa - pb))
}
plot(x, my_list, type = "l", xlim = c(0, 1))
for (i in 0:16) {
my_list[i] <- dmultinom(x = c(i, 0, 16 - i), prob = c(pa, pb, 1- pa - pb))
}
for (i in 0:16) {
my_list[i] <- dmultinom(x = c(i, 0, 16 - i), prob = c(pa, pb, 1- pa - pb))
}
0:16
my_list <- vector()
for (i in 0:16) {
my_list[i] <- dmultinom(x = c(i, 0, 16 - i), prob = c(pa, pb, 1- pa - pb))
}
x <- seq(0, 16)
plot(x, my_list, type = "l", xlim = c(0, 1))
for (i in 0:16) {
my_list[i + 1] <- dmultinom(x = c(i, 0, 16 - i), prob = c(pa, pb, 1- pa - pb))
}
x <- seq(0, 16)
plot(x, my_list, type = "l", xlim = c(0, 1))
plot(x, my_list, type = "l")
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
pa <- beta(q/d - q, (1 - q)*(1 - d)/d)
pb <- beta(q/d - q, (1 - q)*(1 - d)/d)
if (r + s <= 16) {
return(dmultinom(x = c(r, s, n - r - s), prob = c(pa, pb, 1 - pa - pb)))
}
else{
return(0)
}
}
r <- s <- seq(0, 16)
z <- outer(r, s, tst)
persp(r, s, z, theta = 30, phi = 15)
z <- outer(r, s, tst)
c(17 * [pa])
length((1,2,16 -2-1))
length(c(1,2,16 -2-1))
length(pa, pb, 1- pa - pb)
length(c(pa, pb, 1- pa - pb))
17 * c(pa)
seq(pa, by = 0, length = 17)
pa <-seq(pa, by = 0, length = 17)
pb <-seq(pa, by = 0, length = 17)
pb <-seq(pb, by = 0, length = 17)
pb <-seq(pb, length = 17)
pa <- seq(beta(q/d - q, (1 - q)*(1 - d)/d), by = 0, length = 17)
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
pa <- seq(beta(q/d - q, (1 - q)*(1 - d)/d), by = 0, length = 17)
pb <- beta(q/d - q, (1 - q)*(1 - d)/d)
if (r + s <= 16) {
return(dmultinom(x = c(r, s, n - r - s), prob = c(pa, pb, 1 - pa - pb)))
}
else{
return(0)
}
}
pb <- beta(q/d - q, (1 - q)*(1 - d)/d)
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
pa <- seq(beta(q/d - q, (1 - q)*(1 - d)/d), by = 0, length = 17)
pb <- beta(q/d - q, (1 - q)*(1 - d)/d)
if (r + s <= 16) {
return(dmultinom(x = c(r, s, n - r - s), prob = c(pa, pb, 1 - pa - pb)))
}
else{
return(0)
}
}
r <- s <- seq(0, 16)
z <- outer(r, s, tst)
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
pa <- seq(beta(q/d - q, (1 - q)*(1 - d)/d), by = 0, length = 17)
pb <- seq(beta(q/d - q, (1 - q)*(1 - d)/d), by = 0, length = 17)
if (r + s <= 16) {
return(dmultinom(x = c(r, s, n - r - s), prob = c(pa, pb, 1 - pa - pb)))
}
else{
return(0)
}
}
r <- s <- seq(0, 16)
z <- outer(r, s, tst)
1 - pa
- pb
1 - pa - pb
dlt <- 0.1
n <- 16
q <- 0.1
pa <- beta(q/dlt - q, (1 - q)*(1 - dlt)/dlt)
pb <- beta(q/dlt - q, (1 - q)*(1 - dlt)/dlt)
my_list <- vector()
for (i in 0:16) {
my_list[i + 1] <- dmultinom(x = c(i, 0, 16 - i), prob = c(pa, pb, 1- pa - pb))
}
x <- seq(0, 16)
plot(x, my_list, type = "l")
ttst <- function(x, y){
return(dmultinom(x = c(x, y, 16 - x - y), prob = c(0.164, 0.164, 0.673)))
}
r <- s <- seq(0, 16)
z <- outer(r, s, ttst)
ttst(1,1)
ttst(1,0)
ttst(1,2)
ttst(1,3)
ttst(1,4)
ttst(1,5)
ttst(1,6)
ttst(1,7)
ttst(1,8)
ttst(1,9)
ttst(1,10)
dlt <- 0.5
n <- 16
q <- 0.1
pa <- beta(q/dlt - q, (1 - q)*(1 - dlt)/dlt)
pb <- beta(q/dlt - q, (1 - q)*(1 - dlt)/dlt)
my_list <- vector()
for (i in 0:16) {
my_list[i + 1] <- dmultinom(x = c(i, 0, 16 - i), prob = c(pa, pb, 1- pa - pb))
}
x <- seq(0, 16)
plot(x, my_list, type = "l")
for (i in 0:16) {
my_list[i + 1] <- dmultinom(x = c(i, 0, 16 - i), prob = c(pa, pb, 1- pa - pb))
}
pa <- dbeta(1,q/dlt - q, (1 - q)*(1 - dlt)/dlt)
pa <- dbeta(2,q/dlt - q, (1 - q)*(1 - dlt)/dlt)
pa <- dbeta(0,q/dlt - q, (1 - q)*(1 - dlt)/dlt)
pa <- beta(q/dlt - q, (1 - q)*(1 - dlt)/dlt)
pb <- beta(q/dlt - q, (1 - q)*(1 - dlt)/dlt)
dlt <- 0.1
n <- 16
q <- 0.1
pa <- beta(q/dlt - q, (1 - q)*(1 - dlt)/dlt)
pb <- beta(q/dlt - q, (1 - q)*(1 - dlt)/dlt)
my_list <- vector()
for (i in 0:16) {
my_list[i + 1] <- dmultinom(x = c(i, 0, 16 - i), prob = c(pa, pb, 1- pa - pb))
}
x <- seq(0, 16)
plot(x, my_list, type = "l")
rbeta(16, 0.1, 0.9)
mean(my_list)
mean(rbeta(17, 0.1, 0.9))
mean(rbeta(17, 0.9, 8.1))
c(q/dlt - q, (1 - q)*(1 - dlt)/dlt)
mean(rbeta(17, 0.9, 8.1))
ttst <- function(x, y){
dmultinom(x = c(x, y, 16 - x - y), prob = c(0.164, 0.164, 0.673))
}
r <- s <- seq(0, 16)
z <- outer(r, s, ttst)
persp(r, s, z, theta = 30, phi = 15)
z <- outer(r, s, ttst)
ttst <- function(x, y){
if (r + s <= 16) {
dmultinom(x = c(x, y, 16 - x - y), prob = c(0.164, 0.164, 0.673))
}
else{
0
}
}
r <- s <- seq(0, 16)
z <- outer(r, s, ttst)
devtools::document()
