v
sum(v)
plot(x, v, type = "l", xlim = c(0, 1))
plot(x, v, type = "l", xlim = c(0,1))
dlt <- 0.5
q <- 0.1
n <- 16
x <- seq(0.01, 0.99, length = 100)
v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", xlim = c(0, 1))
v_sum <- sum(v)
v <- v / v_sum
plot(x, v, type = "l", xlim = c(0,1))
dlt <- 0.1
q <- 0.1
n <- 16
x <- seq(0.01, 0.99, length = 100)
v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", xlim = c(0, 1))
v_sum <- sum(v)
v <- v / v_sum
plot(x, v, type = "l", xlim = c(0,1))
c(q/dlt - q, (1 - q)*(1 - dlt)/dlt)
a <- 2
b <- 8
v <- dbeta(x, a, b)
plot(x, v, type = "l", xlim = c(0, 1))
c(q/dlt - q, (1 - q)*(1 - dlt)/dlt)
dlt
dlt <- 0.5
c(q/dlt - q, (1 - q)*(1 - dlt)/dlt)
dlt <- 0.1
n <- 16
q <- 0.1
x <- seq(0.01, 0.99, length = 16)
pa <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
pb <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
tst <- dmultinom(x = c(x, 1, 14), prob = c(pa, pb[1], 1- pa))
dlt <- 0.1
n <- 16
q <- 0.1
x <- seq(0.01, 0.99, length = 16)
pa <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
pb <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
my_list <- vector()
for (i in 1:16) {
my_list[i] <- dmultinom(x = c(i, 0, 16 - i), prob = c(pa[i], 0, 1- pa[i]))
}
dlt <- 0.5
q <- 0.1
n <- 16
x <- seq(0.01, 0.99, length = 100)
v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", xlim = c(0, 1))
# These plot do not really make sense to me.
a <- 2
b <- 8
v <- dbeta(x, a, b)
plot(x, v, type = "l", xlim = c(0, 1))
rbeta(10, 0.1, 0.9)
dlt <- 0.5
q <- 0.1
n <- 16
x <- seq(0, 1, by = 0.1)
v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", xlim = c(0, 1))
# These plot do not really make sense to me.
a <- 2
b <- 8
v <- dbeta(x, a, b)
plot(x, v, type = "l", xlim = c(0, 1))
dlt <- 0.5
q <- 0.1
n <- 16
x <- seq(0, 1, by = 0.01)
v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", xlim = c(0, 1))
# These plot do not really make sense to me.
a <- 2
b <- 8
v <- dbeta(x, a, b)
plot(x, v, type = "l", xlim = c(0, 1))
plot(x, v, type = "l", ylab = "Beta Density")
dlt <- 0.5
q <- 0.1
n <- 16
x <- seq(0, 1, by = 0.1)
v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", ylab = "Beta Density")
# These plot do not really make sense to me.
a <- 2
b <- 8
v <- dbeta(x, a, b)
plot(x, v, type = "l", xlim = c(0, 1))
dlt <- 0.5
q <- 0.1
n <- 16
x <- seq(0, 1, by = 0.01)
v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", ylab = "Beta Density")
# These plot do not really make sense to me.
a <- 2
b <- 8
v <- dbeta(x, a, b)
plot(x, v, type = "l", xlim = c(0, 1))
dlt <- 0.1
q <- 0.1
n <- 16
x <- seq(0, 1, by = 0.01)
v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", ylab = "Beta Density")
# These plot do not really make sense to me.
a <- 2
b <- 8
v <- dbeta(x, a, b)
plot(x, v, type = "l", xlim = c(0, 1))
rm(my_list)
knitr::opts_chunk$set(echo = TRUE)
x <- seq(0, 1, length = 16)
dlt <- 0.1
q <- 0.1
n <- 16
x <- seq(0, 1, length = 16)
v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", ylab = "Beta Density")
a <- 2
b <- 8
v <- dbeta(x, a, b)
plot(x, v, type = "l", xlim = c(0, 1))
x <- seq(0, 1, length = 16)
v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
x <- seq(0, 16)
x
x <- seq(0, 1, length = 17)
v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", ylab = "Beta Density")
x <- seq(0, 16)
plot(x, v, type = "l", ylab = "Beta Density")
x <- seq(0, 16)
x <- seq(0.01, 1, length = 17)
v <- dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", ylab = "Beta Density")
tst <- function(r, s, d, q, n = 16){
x <- seq(0, 1, length = 17)
v = dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
dmultinom(x = c(r, s, n - r - s), prob = c(v[r], v[s], 1 - v[r] - v[s]))
}
r <- s <- seq(0, 16, length = 17)
z <- outer(r, s, tst)
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
x <- seq(0, 1, length = 17)
v = dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
dmultinom(x = c(r, s, n - r - s), prob = c(v[r], v[s], 1 - v[r] - v[s]))
}
r <- s <- seq(0, 16, length = 17)
z <- outer(r, s, tst)
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
x <- seq(0, 1, length = 17)
v = dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
dmultinom(x = c(r, s, n - r - s), prob = c(v, v, 1 - v - v))
}
r <- s <- seq(0, 16, length = 17)
z <- outer(r, s, tst)
[r]
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
x <- seq(0, 1, length = 17)
v = dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
dmultinom(x = c(r, s, n - r - s), prob = c(v[r], v[s], 1 - v[r] - v[s]))
}
r <- s <- seq(0, 16, length = 17)
z <- outer(r, s, tst)
r <- s <- seq(0, 16)
x <- seq(0, 1, length = 17)
v = dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
x <- seq(0.01, 1, length = 17)
v = dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
v
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
x <- seq(0.01, 1, length = 17)
v = dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
dmultinom(x = c(r, s, n - r - s), prob = c(v[r], v[s], 1 - v[r] - v[s]))
}
r <- s <- seq(0, 16)
z <- outer(r, s, tst)
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
x <- seq(0.01, 1, length = 17)
v = dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
if (r + s < 16) {
dmultinom(x = c(r, s, n - r - s), prob = c(v[r], v[s], 1 - v[r] - v[s]))
}
}
r <- s <- seq(0, 16)
z <- outer(r, s, tst)
c(r,s,16-s- r)
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
x <- seq(0.01, 1, length = 17)
v = dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
if (r + s < 16) {
dmultinom(x = c(r, s, n - r), prob = c(v[r], v[s], 1 - v[r] - v[s]))
}
}
r <- s <- seq(0, 16)
z <- outer(r, s, tst)
v
length(v)
x <- seq(0.01, 0.99, length = 17)
v = dbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
if (r + s < 16) {
dmultinom(x = c(r, s, n), prob = c(v, v, 1 - v - v))
}
1 - v - v
sum(v)
dlt <- 0.1
q <- 0.1
n <- 16
x <- seq(0, 1, length = 17)
v <- pbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
plot(x, v, type = "l", ylab = "Beta Density")
# These plot do not really make sense to me.
x <- seq(0, 16)
tst <- dmultinom(x = c(x, 0, 16 - x), prob = c(v, 10, ))
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
x <- seq(0.01, 0.99, length = 17)
v = pbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
dmultinom(x = c(r, 0, n), prob = c(v, 10, 1 - v ))
}
r <- s <- seq(0, 16)
z <- outer(r, s, tst)
v
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
x <- seq(0.01, 0.99, length = 17)
v = pbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
dmultinom(x = c(r, s, n - r - s), prob = c(v[r], v[s], 1 - v[r] - v[s]))
}
r <- s <- seq(0, 16)
z <- outer(r, s, tst)
tst <- function(r, s, d = 0.1, q = 0.1, n = 16){
x <- seq(0.01, 0.99, length = 17)
v = pbeta(x, q/dlt - q, (1 - q)*(1 - dlt)/dlt)
#dmultinom(x = c(r, s, n - r - s), prob = c(v[r], v[s], 1 - v[r] - v[s]))
sqrt(r + s ^ 2)
}
r <- s <- seq(0, 16)
z <- outer(r, s, tst)
persp(r, s, z)
library("plot3D")
install.packages("plot3D")
persp(r, s, z, theta = 30, phi = 15)
rm(list = ls())
getwd()
setwd("../../Documents/my_r_packages/project_package/")
devtools::document()
getwd()
devtools::document()
devtools::document()
devtools::document()
getwd()
choose(5,16)
choose(16,5)
library(devtools)
document()
document()
document()
?
d
d
knitr::opts_chunk$set(echo = TRUE)
x <- seq(0, 16, length = 100)
y <- polya(x, delta = 0.1, q = 0.1, n = 16)
plot(x, y, type = "l")
x <- seq(0, 16)
y <- polya(x, delta = 0.1, q = 0.1, n = 16)
plot(x, y, type = "l")
y <- polya(x, delta = 0.5, q = 0.1, n = 16)
plot(x, y, type = "l")
choose(16, x)
x
dbinom(5, 1, prob = 0.5)
dbinom(0.1, 1, prob = 0.5)
dbinom(0, 1, prob = 0.5)
dbinom(1, 1, prob = 0.5)
x
dbinom(x = x, size = 16, prob = 11/16)
plot(x, dbinom(x = x, size = 16, prob = 11/16), type = "l")
x <- seq(0, 16)
y <- polya(x, delta = 0.5, q = 0.1, n = 16)
plot(x, y, type = "l")
y <- polya(x, delta = 0.1, q = 0.1, n = 16)
plot(x, y, type = "l")
z <- y * y
y
t(y)
z <- t(y) @ y
x <- seq(0, 16)
y <- polya(x, delta = 0.1, q = 0.1, n = 16)
z <- t(y) @ y
y <- t(y)
t(y)
y <- t(y)
y <- polya(x, delta = 0.1, q = 0.1, n = 16)
y <- t(y)
z <- t(y) @ y
z <- t(y) * y
z <- t(y) %*% y
z
x <- seq(0, 16)
y <- polya(x, delta = 0.1, q = 0.1, n = 16)
y <- t(y)
z <- t(y) %*% y
y <- polya(x, delta = 0.1, q = 0.1, n = 16)
z <- t(y) %*% y
y <- polya(x, delta = 0.1, q = 0.1, n = 16)
y <- t(y)
z <- t(y) %*% y
plot(x, y, type = "l")
tst <- function(x, y) {
pa <- polya(x, delta = 0.1, q = 0.1)
pb <- polya(y, delta = 0.1, q = 0.1)
return(pa * pb)
}
x <- y <- seq(0,16)
z <- outer(x, y, tst)
plot(x, y, type = "l")
z <- outer(x, y, tst)
x <- seq(0, 16)
y <- polya(x, delta = 0.1, q = 0.1, n = 16)
plot(x, y, type = "l") # Plot for polya distribution for one species.
tst <- function(x, y) {
pa <- polya(x, delta = 0.1, q = 0.1)
pb <- polya(y, delta = 0.1, q = 0.1)
return(pa * pb)
}
x <- y <- seq(0,16)
z <- outer(x, y, tst)
persp(x, y, z, theta = 30, phi = 15)
polya <- function(x, delta, q, n = 16){
# This is pochhammer function used in the polya-distribution.
pochhammer <- function(x, n){
return(gamma(x + n) / gamma(x))}
return(choose(n, x)
* pochhammer(q * (1 / delta - 1), x)
* pochhammer(((1 - delta) * (1 - q))/q, n - x)
* 1 / pochhammer(1 / q - 1, n))
}
x <- seq(0, 16)
y <- polya(x, delta = 0.1, q = 0.1)
plot(x, y, type = "l") # Plot for polya distribution for one species.
tst <- function(x, y) {
pa <- polya(x, delta = 0.1, q = 0.1)
pb <- polya(y, delta = 0.1, q = 0.1)
return(pa * pb)
}
x <- y <- seq(0,16)
z <- outer(x, y, tst)
persp(x, y, z, theta = 20, phi = 15, main = "Relatively small spatial aggregation" )
persp(x, y, z, theta = 20, phi = 15, lphi = 15,ltheta =  15,
main = "Relatively small spatial aggregation",
xlab = "Pins that hit only sp. A",
ylab = "Pins that hit only sp. B",
zlab = "Density")
persp(x, y, z, theta = 20, phi = 15, lphi = 45,ltheta =  15,
main = "Relatively small spatial aggregation",
xlab = "Pins that hit only sp. A",
ylab = "Pins that hit only sp. B",
zlab = "Density")
persp(x, y, z, theta = 20, phi = 15,
main = "Relatively small spatial aggregation",
xlab = "Pins that hit only sp. A",
ylab = "Pins that hit only sp. B",
zlab = "Density")
persp(x, y, z, theta = 20, phi = 15,
main = "Relatively small spatial aggregation",
xlab = "Pins that hit only sp. A",
ylab = "Pins that hit only sp. B",
zlab = "Density",nticks = 16)
large_agg <- function(x, y) {
pa <- polya(x, delta = 0.5, 0.1)
pb <- polya(x, delta = 0.5, 0.1)
return(pa * pb)
}
x <- y <- seq(0,16)
z <- outer(x, y, large_agg)
persp(x, y, z, theta = 20, phi = 15,
main = "Relatively small spatial aggregation",
xlab = "Pins that hit only sp. A",
ylab = "Pins that hit only sp. B",
zlab = "Density")
large_agg <- function(x, y) {
pa <- polya(x, delta = 0.5, 0.1)
pb <- polya(y, delta = 0.5, 0.1)
return(pa * pb)
}
x <- y <- seq(0,16)
z <- outer(x, y, large_agg)
persp(x, y, z, theta = 20, phi = 15,
main = "Relatively small spatial aggregation",
xlab = "Pins that hit only sp. A",
ylab = "Pins that hit only sp. B",
zlab = "Density")
persp(x, y, z, theta = 20, phi = 15,
main = "Relatively small spatial aggregation",
xlab = "Pins that hit only sp. A",
ylab = "Pins that hit only sp. B",
zlab = "Density",axes = FALSE)
persp(x, y, z, theta = 20, phi = 15,
main = "Relatively small spatial aggregation",
xlab = "Pins that hit only sp. A",
ylab = "Pins that hit only sp. B",
zlab = "Density")
small_agg <- function(x, y) {
pa <- polya(x, delta = 0.1, q = 0.1)
pb <- polya(y, delta = 0.1, q = 0.1)
if (x + y <= 16) {
return(pa * pb)
}
else{
return(0)
}
}
x <- y <- seq(0,16)
z <- outer(x, y, small_agg)
persp(x, y, z, theta = 20, phi = 15,
main = "Relatively small spatial aggregation",
xlab = "Pins that hit only sp. A",
ylab = "Pins that hit only sp. B",
zlab = "Density")
large_agg <- function(x, y) {
pa <- polya(x, delta = 0.5, 0.5)
pb <- polya(y, delta = 0.5, 0.5)
return(pa * pb)
}
x <- y <- seq(0,16)
z <- outer(x, y, large_agg)
persp(x, y, z, theta = 20, phi = 15,
main = "Relatively large spatial aggregation",
xlab = "Pins that hit only sp. A",
ylab = "Pins that hit only sp. B",
zlab = "Density")
large_agg <- function(x, y) {
pa <- polya(x, delta = 0.5, 0.5)
pb <- polya(y, delta = 0.5, 0.5)
if (x + y <= 16) {
return(pa * pb)
}
else{
return(0)
}
}
x <- y <- seq(0,16)
z <- outer(x, y, large_agg)
persp(x, y, z, theta = 20, phi = 15,
main = "Relatively large spatial aggregation",
xlab = "Pins that hit only sp. A",
ylab = "Pins that hit only sp. B",
zlab = "Density")
if (x + y < 16) {
return(pa * pb)
}
else{
large_agg <- function(x, y) {
pa <- polya(x, delta = 0.5, 0.5)
pb <- polya(y, delta = 0.5, 0.5)
if (x + y < 16) {
return(pa * pb)
}
else{
return(0)
}
}
x <- y <- seq(0,16)
z <- outer(x, y, large_agg)
persp(x, y, z, theta = 20, phi = 15,
main = "Relatively large spatial aggregation",
xlab = "Pins that hit only sp. A",
ylab = "Pins that hit only sp. B",
zlab = "Density")
pa <- polya(x, delta = 0.5, q = 0.1)
pb <- polya(y, delta = 0.5, q = 0.1)
if (x + y < 16) {
return(pa * pb)
}
large_agg <- function(x, y) {
pa <- polya(x, delta = 0.5, q = 0.1)
pb <- polya(y, delta = 0.5, q = 0.1)
if (x + y < 16) {
return(pa * pb)
}
else{
return(0)
}
}
x <- y <- seq(0,16)
z <- outer(x, y, large_agg)
persp(x, y, z, theta = 20, phi = 15,
main = "Relatively large spatial aggregation",
xlab = "Pins that hit only sp. A",
ylab = "Pins that hit only sp. B",
zlab = "Density")
persp(x, y, z, theta = 20, phi = 15,
main = "Relatively small spatial aggregation",
xlab = "Pins that hit only sp. A",
ylab = "Pins that hit only sp. B",
zlab = "Density",
zlim = c(0,0.1))
persp(x, y, z, theta = 20, phi = 15,
main = "Relatively small spatial aggregation",
xlab = "Pins that hit only sp. A",
ylab = "Pins that hit only sp. B",
zlab = "Density")
rm(list = ls())
library("devtools")
document()
